# EIP-resso Helm Chart Values
# Configuration for Coffee Shop Microservices Ecosystem

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  postgresql:
    auth:
      postgresPassword: "eip-resso-db-password"
      username: "eip-resso"
      password: "eip-resso-user-password"
      database: "eip-resso"
  redis:
    auth:
      enabled: true
      password: "eip-resso-redis-password"

# Common configuration for all services
common:
  labels:
    version: v1
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

# Namespace configuration
namespace:
  create: true
  name: eip-resso
  labels:
    name: eip-resso
    environment: production
    security.policy: enabled
    monitoring: enabled

# Service Account
serviceAccount:
  create: true
  name: eip-resso-service-account
  annotations: {}

# Config Server
configServer:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/config-server
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8888
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  env:
    gitUri: "https://github.com/seshuthota/EIP-resso.git"
    gitUsername: "your-github-username"
    gitPassword: "your-github-token"
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Order Service
orderService:
  enabled: true
  replicaCount: 3
  image:
    repository: eip-resso/order-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Inventory Service
inventoryService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/inventory-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8081
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Payment Service
paymentService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/payment-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8082
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Notification Service
notificationService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/notification-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8083
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Customer Service
customerService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/customer-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8084
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Loyalty Service
loyaltyService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/loyalty-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8085
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Analytics Service
analyticsService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/analytics-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8086
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# User Service
userService:
  enabled: true
  replicaCount: 2
  image:
    repository: eip-resso/user-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8087
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# API Gateway
apiGateway:
  enabled: true
  replicaCount: 3
  image:
    repository: eip-resso/api-gateway
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 12
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Database configuration
postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: "eip-resso-postgres-password"
    username: "eip-resso"
    password: "eip-resso-user-password"
    database: "eip-resso"
  primary:
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
    persistence:
      enabled: true
      size: 20Gi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "eip-resso-redis-password"
  master:
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    persistence:
      enabled: true
      size: 8Gi

# RabbitMQ configuration
rabbitmq:
  enabled: true
  auth:
    username: "eip-resso"
    password: "eip-resso-rabbitmq-password"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  persistence:
    enabled: true
    size: 8Gi

# Elasticsearch configuration
elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  resources:
    requests:
      cpu: "100m"
      memory: "512Mi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  volumeClaimTemplate:
    resources:
      requests:
        storage: 10Gi

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    server:
      resources:
        requests:
          memory: "512Mi"
          cpu: "200m"
        limits:
          memory: "2Gi"
          cpu: "1000m"
      persistentVolume:
        enabled: true
        size: 20Gi
  grafana:
    enabled: true
    adminPassword: "eip-resso-grafana-admin"
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    persistence:
      enabled: true
      size: 5Gi

# Hazelcast configuration
hazelcast:
  enabled: true
  cluster:
    memberCount: 3
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  managementCenter:
    enabled: true
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "300m"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: api.eip-resso.com
      paths:
        - path: /
          pathType: Prefix
    - host: eip-resso.com
      paths:
        - path: /
          pathType: Prefix
    - host: www.eip-resso.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: eip-resso-tls
      hosts:
        - api.eip-resso.com
        - eip-resso.com
        - www.eip-resso.com
  ssl:
    enabled: true
    issuer: letsencrypt-prod
    email: admin@eip-resso.com

# Security configuration
security:
  networkPolicies:
    enabled: true
  podSecurityPolicies:
    enabled: true
  rbac:
    enabled: true
  jwt:
    secret: "eip-resso-jwt-secret-key-change-this-in-production"
    expiration: 900000
  audit:
    enabled: true
    retention: "30d"

# Resource quotas
resourceQuotas:
  enabled: true
  requests:
    cpu: "20"
    memory: "40Gi"
  limits:
    cpu: "40"
    memory: "80Gi"
  pods: "50"
  services: "20"

# Pod disruption budgets
podDisruptionBudgets:
  enabled: true

# Node selectors, tolerations, and affinity
nodeSelector: {}
tolerations: []
affinity: {} 