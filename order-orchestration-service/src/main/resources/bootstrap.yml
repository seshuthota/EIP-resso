spring:
  application:
    name: order-orchestration-service
  profiles:
    active: dev
  config:
    import: "optional:configserver:http://localhost:8888"
  cloud:
    config:
      enabled: false
      # uri: http://localhost:8888
      # fail-fast: true
      # retry:
      #   max-attempts: 5
      #   initial-interval: 1000
      #   max-interval: 10000
    consul:
      enabled: false
      # host: localhost
      # port: 8500
      # discovery:
      #   enabled: true
      #   service-name: ${spring.application.name}
      #   instance-id: ${spring.application.name}:${server.port}
      #   health-check-path: /actuator/health
      #   health-check-interval: 10s
      #   tags:
      #     - "version=1.0.0"
      #     - "patterns=saga,process-manager,scatter-gather,compensation"
      #     - "microservice=order-orchestration"
      #   metadata:
      #     management.port: ${management.server.port:${server.port}}
      #     eip-patterns: "Saga Pattern,Process Manager Pattern,Scatter-Gather Pattern,Compensating Actions Pattern"
      #     cluster-mode: "active-passive"
      #     business-capability: "workflow-orchestration"

server:
  port: 8089

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true 